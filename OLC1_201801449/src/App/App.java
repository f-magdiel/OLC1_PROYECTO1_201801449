/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package App;

import java.awt.BorderLayout;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.io.DataInputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import Analizador.parser;
import Analizador.scanner;
import java.io.StringReader;
import java.util.LinkedList;
import Analizador.TLexemas;
import Analizador.TConjunto;
import Analizador.TExpresiones;
import Analizador.TError;
import AFN.AnalizadorAFN;
import Arbol.AnalizadorArbol;
import java.awt.Image;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author magdi
 */
public class App extends javax.swing.JFrame {
    // listas
   public  ArrayList<TLexemas> lexema = new ArrayList<TLexemas>();
   public ArrayList<TConjunto> conjunto = new ArrayList<TConjunto>();
   public ArrayList<TError> errores = new ArrayList<TError>();
   
   public ArrayList<String> rutaafd = new ArrayList<String>();
   public ArrayList<String> rutasig = new ArrayList<String>();
   public ArrayList<String> rutatrans = new ArrayList<String>();
   public ArrayList<String> rutaarbl = new ArrayList<String>();
   public String opcion="";
   public boolean banderaafd=false;
   public boolean banderaarbl=false;
   public boolean banderatrans=false;
   public boolean banderasig=false;
   public int contImage=0;
    //variables para la lectura de archviso .exp
    public String ruta; // guarda la ruta
    public LineasText lines; // libreria para linea
    public LineasText line;
    public String texto=""; // texto cargado desde archivo
    
    
    private static App instanciaMenu;

    public static App getInstancia() {
        if (instanciaMenu == null) {
            instanciaMenu = new App();
        }
        return instanciaMenu;
    }
    public App() {
        initComponents();
        this.setLocationRelativeTo(null);
         this.setTitle("PROYECTO 1 - ORGANIZACION DE LENGUAJES Y COMPILADORES 1");
        jPanel1.setLayout(new BorderLayout());
        lines = new LineasText();
        jPanel1.add(lines,BorderLayout.WEST);
        jPanel1.add(lines.scrollPane,BorderLayout.CENTER);
        
        jPanel2.setLayout(new BorderLayout());
        line = new LineasText();
        jPanel2.add(line,BorderLayout.WEST);
        jPanel2.add(line.scrollPane,BorderLayout.CENTER);
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jMenuBarPrincipal = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemAbrir = new javax.swing.JMenuItem();
        jMenuItemGuardar = new javax.swing.JMenuItem();
        jMenuItemGuardarcomo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(512, 500));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Archivo de entrada", jPanel1);

        jButton2.setText("Analizar Entrada");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Anterior");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Siguiente");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "AFD", "ARBOLES", "SIGUIENTES", "TRANSICIONES" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Salida", jPanel2);

        jButton1.setText("Tabla Error");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu2.setText("Abrir");

        jMenuItemAbrir.setText("Abrir");
        jMenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemAbrir);

        jMenuItemGuardar.setText("Guardar");
        jMenuItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemGuardar);

        jMenuItemGuardarcomo.setText("Guardar como");
        jMenuItemGuardarcomo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarcomoActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemGuardarcomo);

        jMenuBarPrincipal.add(jMenu2);

        setJMenuBar(jMenuBarPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTabbedPane1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(199, 199, 199)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(146, 146, 146)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton1))
                .addGap(35, 35, 35)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        analizarEntrada();
        impresionConsola();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItemGuardarcomoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarcomoActionPerformed
        // TODO add your handling code here:
        this.guardarComo();
    }//GEN-LAST:event_jMenuItemGuardarcomoActionPerformed

    private void jMenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirActionPerformed
        JFileChooser abrir = new JFileChooser();
        abrir.showOpenDialog(abrir);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "exp");
        abrir.setFileFilter(filter);
        try{
            this.ruta = abrir.getSelectedFile().getAbsolutePath();
            FileInputStream archivo = new FileInputStream(ruta);
            DataInputStream entrada = new DataInputStream(archivo);
            BufferedReader br = new BufferedReader(new InputStreamReader(entrada));
            String linea="";
            while((linea = br.readLine())!=null){
                this.texto+= linea+"\n";
            }

            lines.pane.setText(texto);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "!Ocurrió un error al abrir el archivo!");
        }

    }//GEN-LAST:event_jMenuItemAbrirActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.Anterior();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        this.opcion = jComboBox1.getSelectedItem().toString();
        this.cargarImagen();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.Siguiente();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarActionPerformed
        // TODO add your handling code here:
        this.guardar();
    }//GEN-LAST:event_jMenuItemGuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
        if(this.errores.size()==0){
            JOptionPane.showMessageDialog(null, "!No hay Errores!");
        }else{
             this.generadorTablaError();
            JOptionPane.showMessageDialog(null, "Tabla De Errores Generado");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    //**********************************METODOS***********************************
    
    public void generadorTablaError(){
        //tipo,descripcion,lexema,col,lin
        FileWriter fichero = null;
        PrintWriter pw = null;
        try{
            fichero = new FileWriter("C:\\Users\\magdi\\Desktop\\OLC1_PROYECTO1_201801449\\OLC1_201801449\\Table_Responsive_v1\\index.html");
            pw = new PrintWriter(fichero);
            pw.println("<!DOCTYPE html>");
            pw.println("<html lang=\"en\">");
            pw.println("<head>");
            pw.println("<title>Tabla De Errores</title>");
            pw.println("<meta charset=\"UTF-8\">");
            pw.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
            pw.println("<link rel=\"icon\" type=\"image/png\" href=\"images/icons/favicon.ico\"/>");
            pw.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/bootstrap/css/bootstrap.min.css\">");
            pw.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/font-awesome-4.7.0/css/font-awesome.min.css\">");
            pw.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animate/animate.css\">");
            pw.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/select2/select2.min.css\">");
            pw.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/perfect-scrollbar/perfect-scrollbar.css\">");
            pw.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/util.css\">");
            pw.println("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">");
            pw.println("</head>");
            pw.println("<body>");
            pw.println("<div class=\"limiter\">");
            pw.println("<div class=\"container-table100\">");
            pw.println("<div class=\"wrap-table100\">");
            pw.println("<div class=\"table100\">");
            pw.println("<table>");
            pw.println("<thead>");
            pw.println("<tr class=\"table100-head\">");
            pw.println("<th class=\"column1\">No</th>");
            pw.println("<th class=\"column2\">Tipo</th>");
            pw.println("<th class=\"column3\">Descripcion</th>");
            pw.println("<th class=\"column4\">Lexema</th>");
            pw.println("<th class=\"column5\">Linea</th>");
            pw.println("<th class=\"column6\">Columna</th>");
            pw.println("</tr>");
            pw.println("</thead>");
            pw.println("<tbody>");
            //for para mandar la info
            
            for (int i = 0; i < this.errores.size(); i++) {
                pw.println("<tr>");
                pw.println("<td class=\"column1\">"+Integer.toString(i)+"</td>");
                pw.println("<td class=\"column2\">"+this.errores.get(i).getTipo()+"</td>");
                pw.println("<td class=\"column3\">"+this.errores.get(i).getDescripcion()+"</td>");
                pw.println("<td class=\"column4\">"+this.errores.get(i).getLexema()+"</td>");
                pw.println("<td class=\"column5\">"+this.errores.get(i).getColumna()+"</td>");
                pw.println("<td class=\"column6\">"+this.errores.get(i).getLinea()+"</td>");
                pw.println("</tr>");
            }
            pw.println("</tbody>");
            pw.println("</table>");
            pw.println("</div>");
            pw.println("</div>");
            pw.println("</div>");
            pw.println("</div>");
            pw.println("<script src=\"vendor/jquery/jquery-3.2.1.min.js\"></script>");
            pw.println("<script src=\"vendor/bootstrap/js/popper.js\"></script>");
            pw.println("<script src=\"vendor/bootstrap/js/bootstrap.min.js\"></script>");
            pw.println("<script src=\"vendor/select2/select2.min.js\"></script>");
            pw.println("<script src=\"js/main.js\"></script>");
            pw.println("</body>");
            pw.println("</html>");
   
        }catch(Exception e){
            System.out.println("Error al genere el HTML");
            e.printStackTrace();
        }finally{
            try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        }
    }
    public void guardar(){
        FileWriter fichero = null;
        PrintWriter pw = null;
        String texto="";
        try{
            fichero = new FileWriter(ruta);
            pw = new PrintWriter(fichero);
            texto = lines.pane.getText();
            pw.println(texto);
        }catch(Exception e){
            e.printStackTrace();
            System.out.println("Error al guardar archivo");
        }finally{
            try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        }
    }
    
    public void guardarComo(){
        FileWriter fichero = null;
        PrintWriter pw = null;
        String texto="";
        String pathd="";
        JFileChooser file = new JFileChooser();
        int res = file.showSaveDialog(this);
        if(res==JFileChooser.APPROVE_OPTION){
            pathd= file.getSelectedFile().getAbsolutePath();
            try {
                fichero = new FileWriter(pathd);
                pw = new PrintWriter(fichero);
                texto = lines.pane.getText();
                pw.println(texto);
            } catch (Exception e) {
                System.out.println("Error al guardar como");
                e.printStackTrace();
            }finally{
                try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
            }
            
        }
        
        
        
        
    }
    public void impresionConsola(){
        String lineas="";
        lineas+="Iniciando analisis.....\n";
        if(this.errores.size()==0){
            lineas+="No hay errores....\n";
        }else{
            for (int i = 0; i < this.errores.size(); i++) {
            lineas+=this.errores.get(i).getTipo()+" \n";
            lineas+=this.errores.get(i).getDescripcion()+" \n";
            lineas+=this.errores.get(i).getLexema()+" \n";
            lineas+=this.errores.get(i).getColumna()+" \n";
            lineas+=this.errores.get(i).getLinea()+" \n";
            
        }
        }
        lineas+="Finalizando analisis.....\n";
        line.pane.setText(lineas);
        
    }
    public void analizarEntrada(){
        if(!"".equals(lines.pane.getText())){
            this.texto = lines.pane.getText();
            this.enviarAnalisis(texto);
        }else{
            JOptionPane.showMessageDialog(null, "No hay texto a analizar","Error En Area de Texto",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void enviarAnalisis(String texto){
        AnalizadorAFN afn = new AnalizadorAFN();
        AnalizadorArbol arbol = new AnalizadorArbol();
        try{
            System.out.println("Iniciando analisis....");
            scanner scan = new scanner(new BufferedReader(new StringReader(texto)));
            parser parser = new parser(scan);
            parser.parse();
            System.out.println("Finaliza analisis...");
            //pasar lista a una estatica
            this.lexema = parser.TablaLexema;
            this.conjunto = parser.TablaConjunto;
            this.errores = parser.TablaErrorSintactico;
            for (int i = 0; i < parser.TablaExpresion.size(); i++) {
                arbol.entradaAnalizador(parser.TablaExpresion.get(i).getExpresion(),parser.TablaExpresion.get(i).getNombre(),this.lexema,this.conjunto);
                this.rutaafd.add("C:\\Users\\magdi\\Desktop\\OLC1_PROYECTO1_201801449\\OLC1_201801449\\AFD_201801449\\"+parser.TablaExpresion.get(i).getNombre()+".jpg");//para AFD
                this.rutaarbl.add("C:\\Users\\magdi\\Desktop\\OLC1_PROYECTO1_201801449\\OLC1_201801449\\ARBOLES_201801449\\"+parser.TablaExpresion.get(i).getNombre()+".jpg");
                this.rutasig.add("C:\\Users\\magdi\\Desktop\\OLC1_PROYECTO1_201801449\\OLC1_201801449\\SIGUIENTES_201801449\\"+parser.TablaExpresion.get(i).getNombre()+".jpg");
                this.rutatrans.add("C:\\Users\\magdi\\Desktop\\OLC1_PROYECTO1_201801449\\OLC1_201801449\\TRANSICIONES_201801449\\"+parser.TablaExpresion.get(i).getNombre()+".jpg");
            }
        
            
            
            
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    public void cargarImagen(){
        
        if(this.opcion.equals("AFD")){
            System.out.println("AFD");
            this.banderaafd = true;
            this.banderaarbl = false;
            this.banderasig = false;
            this.banderatrans = false;
            this.contImage=0;
        }else if(this.opcion.equals("ARBOLES")){
            System.out.println("ARBOLES");
            this.banderaafd = false;
            this.banderaarbl = true;
            this.banderasig = false;
            this.banderatrans = false;
            this.contImage=0;
        }else if(this.opcion.equals("TRANSICIONES")){
            System.out.println("TRANSICIONES");
            this.banderaafd = false;
            this.banderaarbl = false;
            this.banderasig = false;
            this.banderatrans = true;
            this.contImage=0;
        }else if(this.opcion.equals("SIGUIENTES")){
            System.out.println("SIGUIENTES");
            this.banderaafd = false;
            this.banderaarbl = false;
            this.banderasig = true;
            this.banderatrans = false;
            this.contImage=0;
        }
        
        this.mostrarImagen();
    }
    
    public void mostrarImagen(){
        if(this.banderaafd==true ){
            Image miImagen = new ImageIcon(this.rutaafd.get(0)).getImage();
            ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
            jLabel1.setIcon(miIcon);
        }
        
        if(this.banderaarbl==true ){
            Image miImagen = new ImageIcon(this.rutaarbl.get(0)).getImage();
            ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
            jLabel1.setIcon(miIcon);
        }
        
        if(this.banderasig==true ){
            Image miImagen = new ImageIcon(this.rutasig.get(0)).getImage();
            ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
            jLabel1.setIcon(miIcon);
        }
        
        if(this.banderatrans ==true ){
            Image miImagen = new ImageIcon(this.rutatrans.get(0)).getImage();
            ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
            jLabel1.setIcon(miIcon);
        }
        
        
        
        
    
    }
    
    public void Anterior(){
        if(this.banderaafd ==true ){
            if(this.contImage==0){
                Image miImagen = new ImageIcon(this.rutaafd.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }else{
                this.contImage--;
                Image miImagen = new ImageIcon(this.rutaafd.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }
            
        }
        
        if(this.banderaarbl ==true ){
            if(this.contImage==0){
                Image miImagen = new ImageIcon(this.rutaarbl.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }else{
                this.contImage--;
                Image miImagen = new ImageIcon(this.rutaarbl.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }
            
        }
        
        if(this.banderasig ==true ){
            if(this.contImage==0){
                Image miImagen = new ImageIcon(this.rutasig.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }else{
                this.contImage--;
                Image miImagen = new ImageIcon(this.rutasig.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }
            
        }
        
        if(this.banderatrans ==true ){
            if(this.contImage==0){
                Image miImagen = new ImageIcon(this.rutatrans.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }else{
                this.contImage--;
                Image miImagen = new ImageIcon(this.rutatrans.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }
            
        }
    }
    
    public void Siguiente(){
        if(this.banderaafd ==true ){
            if(this.contImage==(this.rutaafd.size()-1)){
                Image miImagen = new ImageIcon(this.rutaafd.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }else{
                this.contImage++;
                Image miImagen = new ImageIcon(this.rutaafd.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }
            
        }
        
        if(this.banderaarbl ==true ){
            if(this.contImage==(this.rutaarbl.size()-1)){
                Image miImagen = new ImageIcon(this.rutaarbl.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }else{
                this.contImage++;
                Image miImagen = new ImageIcon(this.rutaarbl.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }
            
        }
        
        if(this.banderasig ==true ){
            if(this.contImage==(this.rutasig.size()-1)){
                Image miImagen = new ImageIcon(this.rutasig.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }else{
                this.contImage++;
                Image miImagen = new ImageIcon(this.rutasig.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }
            
        }
        
        if(this.banderatrans ==true ){
            if(this.contImage==(this.rutatrans.size()-1)){
                Image miImagen = new ImageIcon(this.rutatrans.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }else{
                this.contImage++;
                Image miImagen = new ImageIcon(this.rutatrans.get(this.contImage)).getImage();
                ImageIcon miIcon = new ImageIcon(miImagen.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
                jLabel1.setIcon(miIcon);
            }
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBarPrincipal;
    private javax.swing.JMenuItem jMenuItemAbrir;
    private javax.swing.JMenuItem jMenuItemGuardar;
    private javax.swing.JMenuItem jMenuItemGuardarcomo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    // End of variables declaration//GEN-END:variables
}
